Segue o conte√∫do do **README.md** para o projeto:

```markdown
# Teste T√©cnico - Solu√ß√µes em Java

Este projeto cont√©m a resolu√ß√£o de um teste t√©cnico utilizando **Java 17**. O objetivo foi implementar solu√ß√µes para 5 quest√µes propostas, todas centralizadas em uma √∫nica classe `Main`, de forma interativa e organizada.

---

## üöÄ Tecnologias Utilizadas

- **Java 17**: Escolhemos esta vers√£o por sua estabilidade e pelas melhorias adicionadas, como o suporte ao `switch` aprimorado e melhorias de desempenho.
- **Ambiente CLI (Prompt de Comando)**: O programa √© executado diretamente no terminal, permitindo uma experi√™ncia de usu√°rio simples e funcional.

---

## üìã Estrutura do Programa

O programa cont√©m:

- **Uma √∫nica classe `Main`**: Todas as solu√ß√µes foram centralizadas nesta classe para simplificar a execu√ß√£o e evitar a complexidade de navega√ß√£o entre v√°rios arquivos em um ambiente de teste cronometrado.
- **M√©todos est√°ticos**: Cada exerc√≠cio foi implementado como um m√©todo independente, chamado diretamente pelo menu interativo.
- **Menu interativo**: Permite ao usu√°rio selecionar o exerc√≠cio desejado e permanecer no programa at√© decidir sair.

---

## ‚ÑπÔ∏è Por que usar uma √∫nica classe `Main`?

Optar por uma √∫nica classe simplifica a execu√ß√£o e a organiza√ß√£o do c√≥digo em ambientes onde o tempo √© limitado, como testes t√©cnicos. Esta abordagem possui as seguintes vantagens:

1. **Foco na execu√ß√£o**: O examinador n√£o precisa navegar por v√°rias classes, facilitando a verifica√ß√£o do funcionamento.
2. **Redu√ß√£o de complexidade**: Evita configura√ß√µes de projeto ou m√∫ltiplos arquivos, ideal para ambientes onde a simplicidade √© essencial.
3. **Organiza√ß√£o clara**: Mesmo com apenas uma classe, o uso de m√©todos espec√≠ficos para cada exerc√≠cio mant√©m o c√≥digo leg√≠vel e modular.

---

## üìù Como Executar o Programa

### Pr√©-requisitos

- **Java 17 ou superior** instalado.
- Um terminal ou prompt de comando configurado com acesso ao compilador `javac` e ao execut√°vel `java`.

### Passo a Passo

1. Clone este reposit√≥rio ou copie o c√≥digo para um arquivo local chamado `Main.java`.

2. Compile o programa no terminal:
   ```bash
   javac Main.java
   ```

3. Execute o programa:
   ```bash
   java Main
   ```

4. Siga as instru√ß√µes no menu interativo. O programa permanecer√° ativo at√© que voc√™ escolha a op√ß√£o **0** (sair).

---

## üìö Exerc√≠cios Resolvidos

### **Exerc√≠cio 1**: Soma de n√∫meros
Calcula o valor da soma de n√∫meros de 1 a 13 conforme descrito no enunciado.

### **Exerc√≠cio 2**: Verificar n√∫mero na sequ√™ncia de Fibonacci
Permite ao usu√°rio informar um n√∫mero e verifica se ele pertence √† sequ√™ncia de Fibonacci.

### **Exerc√≠cio 3**: An√°lise de faturamento di√°rio
Realiza c√°lculos baseados em um vetor de faturamento di√°rio:
- Menor valor de faturamento.
- Maior valor de faturamento.
- Dias com faturamento superior √† m√©dia.

### **Exerc√≠cio 4**: Percentual de faturamento por estado
Calcula a representa√ß√£o percentual do faturamento de cada estado em rela√ß√£o ao total.

### **Exerc√≠cio 5**: Inverter uma string
Recebe uma string do usu√°rio e retorna sua invers√£o sem usar fun√ß√µes prontas.

---

## üìû Suporte

Se voc√™ tiver d√∫vidas ou encontrar problemas durante a execu√ß√£o, entre em contato comigo. Estou dispon√≠vel para ajudar! üòä
```